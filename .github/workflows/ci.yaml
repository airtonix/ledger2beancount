---
# SPDX-FileCopyrightText: © 2018 Stefano Zacchiroli <zack@upsilon.cc>
# SPDX-FileCopyrightText: © 2018 Martin Michlmayr <tbm@cyrius.com>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: CI

on:
  pull_request:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

# Needed for nx-set-shas within nx-cloud-main.yml, when run on the master branch
permissions:
  actions: read
  contents: read


jobs:

  Test:
    name: Unit Tests
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        beancount:
          - "beancount>=2.3.3"
          - "git+https://github.com/beancount/beancount/@v2"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - if: matrix.os == 'ubuntu-latest'
        run: sudo apt install hledger ledger

      - if: matrix.os == 'macos-latest'
        run: brew install coreutils hledger ledger

      - if: matrix.os == 'windows-latest'
        run: choco install strawberryperl

      - uses: perl-actions/install-with-cpanm@v1.1
        with:
          cpanfile: "cpanfile"

      - run: pip install ${{ matrix.beancount }}

      - if: matrix.os != 'windows-latest'
        run: make test

      - if: matrix.os == 'windows-latest'
        run: make test
        env:
          PERL5BIN: C:\\strawberry\\perl\\bin\\perl

  TestDocker:
    name: Docker Tests
    runs-on: ubuntu-latest
    needs: Test
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/docker-build
        id: docker
        with:
          repository_owner: ${{ github.repository_owner }}
          repository_name: ${{ github.event.repository.name }}
          token: ${{ secrets.GITHUB_TOKEN }}
          test: true

  LintDocumentation:
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v4
        - run: pip install -r requirements.txt
        - run: mkdocs build
        - run:  |
            find \( -name "*.yaml" -or -name "*.yml" \) -exec yamllint -s {} \;
        - run: sudo apt-get install aspell aspell-en
        - run: pip install "pyspelling>=2.7"
        - run: pyspelling
        - run: pip install codespell
        - run: find \( -name "*.md" -or -name "*.scd" \) -exec codespell {} \;
