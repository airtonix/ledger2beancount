name: 'Hello World'
description: 'Greet someone'

inputs:
  test:  # id of input
    description: 'Should we test the image?'
    required: false
    default: 'false'
  token:
    description: 'GitHub token'
    required: true
  repository_owner:
    description: 'Owner of the repository'
    required: true
  repository_name:
    description: 'Name of the repository'
    required: true
  version:
    description: 'Version of the image'
    required: false



outputs:
  tags:
    description: "tags"
    value: ${{ steps.docker_meta.outputs.tags }}

  labels:
    description: "labels"
    value: ${{ steps.docker_meta.outputs.labels }}

runs:
  using: "composite"
  steps:

    - name: fail if no token
      shell: bash
      run: |
        if [ -z "${{ inputs.token }}" ]; then
          echo "Token is required"
          exit 1
        fi

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.repository_owner }}
        password: ${{ inputs.token }}

    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        # if you want to push to more registries, then you:
        #  1. add the fully qualified image name to the list
        #  2. insert another login action above for the registry
        images: |
          ghcr.io/${{ inputs.repository_owner }}/${{ inputs.repository_name }}

        # generate Docker tags based on the following events/attributes.
        # It ends up instructing further actions to tag the image with the git sha, semver, and latest.

        # the following means:
        #  sha: the image will be tagged with the git sha of the commit
        #    https://github.com/docker/metadata-action?tab=readme-ov-file#typesha
        #  pep440: the tag will be the semver version if there is a tag on the commit. there will be a tag for each semver component: 1.2.3, 1.2, 1
        #    https://github.com/docker/metadata-action?tab=readme-ov-file#typepep440
        #  raw: the tag will be latest if this is a build on the default branch
        #    https://github.com/docker/metadata-action?tab=readme-ov-file#typeraw
        tags: |
          type=ref,event=pr
          type=ref,event=branch
          type=sha,enable=true,priority=100,prefix=gitsha-,suffix=,format=short
          type=raw,value=latest,enable={{is_default_branch}}
          type=pep440,pattern={{version}},value=${{ inputs.version }}
          type=pep440,pattern={{major}}.{{minor}},value=${{ inputs.version }}
          type=pep440,pattern={{major}},value=${{ inputs.version }}

    - name: Build and push
      uses: docker/build-push-action@v5
      if: ${{ inputs.test == 'true' }}
      with:
        context: .
        load: true
        tags: ${{ inputs.repository_name }}_TEST

    - name: Test
      shell: bash
      if: ${{ inputs.test == 'true' }}
      run: |
        docker run --rm ${{ inputs.repository_name }}_TEST

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        cache-from: type=registry,ref=ghcr.io/${{ inputs.repository_owner }}/${{ inputs.repository_name }}:latest
        cache-to: type=inline

    - name: Cleanup
      shell: bash
      run: |
        docker rmi ${{ steps.docker.outputs.tag }}
